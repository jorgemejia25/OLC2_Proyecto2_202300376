//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar/GoLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class GoLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, INT=59, FLOAT=60, 
		STRING=61, RUNE=62, BOOL=63, ID=64, SEMICOLON=65, WS=66, SINGLE_LINE_COMMENT=67, 
		MULTI_LINE_COMMENT=68;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "INT", "FLOAT", "STRING", "RUNE", "BOOL", "ID", "SEMICOLON", 
		"WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", "ESC"
	};


	public GoLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GoLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'var'", "'const'", "'='", "':='", "'func'", "'('", "')'", "','", 
		"'.'", "'['", "']'", "'+='", "'-='", "'++'", "'--'", "'if'", "'else'", 
		"'while'", "'break'", "'continue'", "'switch'", "'{'", "'}'", "'for'", 
		"'range'", "'case'", "':'", "'default'", "'*'", "'/'", "'%'", "'+'", "'-'", 
		"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'!'", "'len'", "'append'", 
		"'strings.Join'", "'slices.Index'", "'strconv.Atoi'", "'strconv.ParseFloat'", 
		"'reflect.TypeOf'", "'&&'", "'||'", "'nil'", "'fmt.Println'", "'return'", 
		"'int'", "'float64'", "'string'", "'bool'", "'rune'", "'[]'", null, null, 
		null, null, null, null, "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "INT", 
		"FLOAT", "STRING", "RUNE", "BOOL", "ID", "SEMICOLON", "WS", "SINGLE_LINE_COMMENT", 
		"MULTI_LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "GoLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static GoLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,68,509,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,1,0,1,0,1,0,1,0,
		1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,
		5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,
		12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
		16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,
		19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,
		20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
		24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,
		27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,
		33,1,34,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,
		39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,
		42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,
		43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,
		45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
		45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,
		46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,
		50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,
		51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
		53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,
		56,1,56,1,56,1,56,1,57,1,57,1,57,1,58,4,58,423,8,58,11,58,12,58,424,1,
		59,4,59,428,8,59,11,59,12,59,429,1,59,1,59,4,59,434,8,59,11,59,12,59,435,
		1,60,1,60,1,60,5,60,441,8,60,10,60,12,60,444,9,60,1,60,1,60,1,61,1,61,
		1,61,3,61,451,8,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,
		62,3,62,464,8,62,1,63,1,63,5,63,468,8,63,10,63,12,63,471,9,63,1,64,1,64,
		1,65,4,65,476,8,65,11,65,12,65,477,1,65,1,65,1,66,1,66,1,66,1,66,5,66,
		486,8,66,10,66,12,66,489,9,66,1,66,1,66,1,67,1,67,1,67,1,67,5,67,497,8,
		67,10,67,12,67,500,9,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,498,
		0,69,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
		14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
		26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
		38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
		50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
		60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,0,1,0,8,
		1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,92,3,0,65,90,95,95,97,122,4,0,48,
		57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,8,0,34,34,39,
		39,92,92,98,98,102,102,110,110,114,114,116,116,518,0,1,1,0,0,0,0,3,1,0,
		0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
		1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
		0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,
		123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
		133,1,0,0,0,0,135,1,0,0,0,1,139,1,0,0,0,3,143,1,0,0,0,5,149,1,0,0,0,7,
		151,1,0,0,0,9,154,1,0,0,0,11,159,1,0,0,0,13,161,1,0,0,0,15,163,1,0,0,0,
		17,165,1,0,0,0,19,167,1,0,0,0,21,169,1,0,0,0,23,171,1,0,0,0,25,174,1,0,
		0,0,27,177,1,0,0,0,29,180,1,0,0,0,31,183,1,0,0,0,33,186,1,0,0,0,35,191,
		1,0,0,0,37,197,1,0,0,0,39,203,1,0,0,0,41,212,1,0,0,0,43,219,1,0,0,0,45,
		221,1,0,0,0,47,223,1,0,0,0,49,227,1,0,0,0,51,233,1,0,0,0,53,238,1,0,0,
		0,55,240,1,0,0,0,57,248,1,0,0,0,59,250,1,0,0,0,61,252,1,0,0,0,63,254,1,
		0,0,0,65,256,1,0,0,0,67,258,1,0,0,0,69,261,1,0,0,0,71,264,1,0,0,0,73,266,
		1,0,0,0,75,268,1,0,0,0,77,271,1,0,0,0,79,274,1,0,0,0,81,276,1,0,0,0,83,
		280,1,0,0,0,85,287,1,0,0,0,87,300,1,0,0,0,89,313,1,0,0,0,91,326,1,0,0,
		0,93,345,1,0,0,0,95,360,1,0,0,0,97,363,1,0,0,0,99,366,1,0,0,0,101,370,
		1,0,0,0,103,382,1,0,0,0,105,389,1,0,0,0,107,393,1,0,0,0,109,401,1,0,0,
		0,111,408,1,0,0,0,113,413,1,0,0,0,115,418,1,0,0,0,117,422,1,0,0,0,119,
		427,1,0,0,0,121,437,1,0,0,0,123,447,1,0,0,0,125,463,1,0,0,0,127,465,1,
		0,0,0,129,472,1,0,0,0,131,475,1,0,0,0,133,481,1,0,0,0,135,492,1,0,0,0,
		137,506,1,0,0,0,139,140,5,118,0,0,140,141,5,97,0,0,141,142,5,114,0,0,142,
		2,1,0,0,0,143,144,5,99,0,0,144,145,5,111,0,0,145,146,5,110,0,0,146,147,
		5,115,0,0,147,148,5,116,0,0,148,4,1,0,0,0,149,150,5,61,0,0,150,6,1,0,0,
		0,151,152,5,58,0,0,152,153,5,61,0,0,153,8,1,0,0,0,154,155,5,102,0,0,155,
		156,5,117,0,0,156,157,5,110,0,0,157,158,5,99,0,0,158,10,1,0,0,0,159,160,
		5,40,0,0,160,12,1,0,0,0,161,162,5,41,0,0,162,14,1,0,0,0,163,164,5,44,0,
		0,164,16,1,0,0,0,165,166,5,46,0,0,166,18,1,0,0,0,167,168,5,91,0,0,168,
		20,1,0,0,0,169,170,5,93,0,0,170,22,1,0,0,0,171,172,5,43,0,0,172,173,5,
		61,0,0,173,24,1,0,0,0,174,175,5,45,0,0,175,176,5,61,0,0,176,26,1,0,0,0,
		177,178,5,43,0,0,178,179,5,43,0,0,179,28,1,0,0,0,180,181,5,45,0,0,181,
		182,5,45,0,0,182,30,1,0,0,0,183,184,5,105,0,0,184,185,5,102,0,0,185,32,
		1,0,0,0,186,187,5,101,0,0,187,188,5,108,0,0,188,189,5,115,0,0,189,190,
		5,101,0,0,190,34,1,0,0,0,191,192,5,119,0,0,192,193,5,104,0,0,193,194,5,
		105,0,0,194,195,5,108,0,0,195,196,5,101,0,0,196,36,1,0,0,0,197,198,5,98,
		0,0,198,199,5,114,0,0,199,200,5,101,0,0,200,201,5,97,0,0,201,202,5,107,
		0,0,202,38,1,0,0,0,203,204,5,99,0,0,204,205,5,111,0,0,205,206,5,110,0,
		0,206,207,5,116,0,0,207,208,5,105,0,0,208,209,5,110,0,0,209,210,5,117,
		0,0,210,211,5,101,0,0,211,40,1,0,0,0,212,213,5,115,0,0,213,214,5,119,0,
		0,214,215,5,105,0,0,215,216,5,116,0,0,216,217,5,99,0,0,217,218,5,104,0,
		0,218,42,1,0,0,0,219,220,5,123,0,0,220,44,1,0,0,0,221,222,5,125,0,0,222,
		46,1,0,0,0,223,224,5,102,0,0,224,225,5,111,0,0,225,226,5,114,0,0,226,48,
		1,0,0,0,227,228,5,114,0,0,228,229,5,97,0,0,229,230,5,110,0,0,230,231,5,
		103,0,0,231,232,5,101,0,0,232,50,1,0,0,0,233,234,5,99,0,0,234,235,5,97,
		0,0,235,236,5,115,0,0,236,237,5,101,0,0,237,52,1,0,0,0,238,239,5,58,0,
		0,239,54,1,0,0,0,240,241,5,100,0,0,241,242,5,101,0,0,242,243,5,102,0,0,
		243,244,5,97,0,0,244,245,5,117,0,0,245,246,5,108,0,0,246,247,5,116,0,0,
		247,56,1,0,0,0,248,249,5,42,0,0,249,58,1,0,0,0,250,251,5,47,0,0,251,60,
		1,0,0,0,252,253,5,37,0,0,253,62,1,0,0,0,254,255,5,43,0,0,255,64,1,0,0,
		0,256,257,5,45,0,0,257,66,1,0,0,0,258,259,5,61,0,0,259,260,5,61,0,0,260,
		68,1,0,0,0,261,262,5,33,0,0,262,263,5,61,0,0,263,70,1,0,0,0,264,265,5,
		62,0,0,265,72,1,0,0,0,266,267,5,60,0,0,267,74,1,0,0,0,268,269,5,62,0,0,
		269,270,5,61,0,0,270,76,1,0,0,0,271,272,5,60,0,0,272,273,5,61,0,0,273,
		78,1,0,0,0,274,275,5,33,0,0,275,80,1,0,0,0,276,277,5,108,0,0,277,278,5,
		101,0,0,278,279,5,110,0,0,279,82,1,0,0,0,280,281,5,97,0,0,281,282,5,112,
		0,0,282,283,5,112,0,0,283,284,5,101,0,0,284,285,5,110,0,0,285,286,5,100,
		0,0,286,84,1,0,0,0,287,288,5,115,0,0,288,289,5,116,0,0,289,290,5,114,0,
		0,290,291,5,105,0,0,291,292,5,110,0,0,292,293,5,103,0,0,293,294,5,115,
		0,0,294,295,5,46,0,0,295,296,5,74,0,0,296,297,5,111,0,0,297,298,5,105,
		0,0,298,299,5,110,0,0,299,86,1,0,0,0,300,301,5,115,0,0,301,302,5,108,0,
		0,302,303,5,105,0,0,303,304,5,99,0,0,304,305,5,101,0,0,305,306,5,115,0,
		0,306,307,5,46,0,0,307,308,5,73,0,0,308,309,5,110,0,0,309,310,5,100,0,
		0,310,311,5,101,0,0,311,312,5,120,0,0,312,88,1,0,0,0,313,314,5,115,0,0,
		314,315,5,116,0,0,315,316,5,114,0,0,316,317,5,99,0,0,317,318,5,111,0,0,
		318,319,5,110,0,0,319,320,5,118,0,0,320,321,5,46,0,0,321,322,5,65,0,0,
		322,323,5,116,0,0,323,324,5,111,0,0,324,325,5,105,0,0,325,90,1,0,0,0,326,
		327,5,115,0,0,327,328,5,116,0,0,328,329,5,114,0,0,329,330,5,99,0,0,330,
		331,5,111,0,0,331,332,5,110,0,0,332,333,5,118,0,0,333,334,5,46,0,0,334,
		335,5,80,0,0,335,336,5,97,0,0,336,337,5,114,0,0,337,338,5,115,0,0,338,
		339,5,101,0,0,339,340,5,70,0,0,340,341,5,108,0,0,341,342,5,111,0,0,342,
		343,5,97,0,0,343,344,5,116,0,0,344,92,1,0,0,0,345,346,5,114,0,0,346,347,
		5,101,0,0,347,348,5,102,0,0,348,349,5,108,0,0,349,350,5,101,0,0,350,351,
		5,99,0,0,351,352,5,116,0,0,352,353,5,46,0,0,353,354,5,84,0,0,354,355,5,
		121,0,0,355,356,5,112,0,0,356,357,5,101,0,0,357,358,5,79,0,0,358,359,5,
		102,0,0,359,94,1,0,0,0,360,361,5,38,0,0,361,362,5,38,0,0,362,96,1,0,0,
		0,363,364,5,124,0,0,364,365,5,124,0,0,365,98,1,0,0,0,366,367,5,110,0,0,
		367,368,5,105,0,0,368,369,5,108,0,0,369,100,1,0,0,0,370,371,5,102,0,0,
		371,372,5,109,0,0,372,373,5,116,0,0,373,374,5,46,0,0,374,375,5,80,0,0,
		375,376,5,114,0,0,376,377,5,105,0,0,377,378,5,110,0,0,378,379,5,116,0,
		0,379,380,5,108,0,0,380,381,5,110,0,0,381,102,1,0,0,0,382,383,5,114,0,
		0,383,384,5,101,0,0,384,385,5,116,0,0,385,386,5,117,0,0,386,387,5,114,
		0,0,387,388,5,110,0,0,388,104,1,0,0,0,389,390,5,105,0,0,390,391,5,110,
		0,0,391,392,5,116,0,0,392,106,1,0,0,0,393,394,5,102,0,0,394,395,5,108,
		0,0,395,396,5,111,0,0,396,397,5,97,0,0,397,398,5,116,0,0,398,399,5,54,
		0,0,399,400,5,52,0,0,400,108,1,0,0,0,401,402,5,115,0,0,402,403,5,116,0,
		0,403,404,5,114,0,0,404,405,5,105,0,0,405,406,5,110,0,0,406,407,5,103,
		0,0,407,110,1,0,0,0,408,409,5,98,0,0,409,410,5,111,0,0,410,411,5,111,0,
		0,411,412,5,108,0,0,412,112,1,0,0,0,413,414,5,114,0,0,414,415,5,117,0,
		0,415,416,5,110,0,0,416,417,5,101,0,0,417,114,1,0,0,0,418,419,5,91,0,0,
		419,420,5,93,0,0,420,116,1,0,0,0,421,423,7,0,0,0,422,421,1,0,0,0,423,424,
		1,0,0,0,424,422,1,0,0,0,424,425,1,0,0,0,425,118,1,0,0,0,426,428,7,0,0,
		0,427,426,1,0,0,0,428,429,1,0,0,0,429,427,1,0,0,0,429,430,1,0,0,0,430,
		431,1,0,0,0,431,433,5,46,0,0,432,434,7,0,0,0,433,432,1,0,0,0,434,435,1,
		0,0,0,435,433,1,0,0,0,435,436,1,0,0,0,436,120,1,0,0,0,437,442,5,34,0,0,
		438,441,3,137,68,0,439,441,8,1,0,0,440,438,1,0,0,0,440,439,1,0,0,0,441,
		444,1,0,0,0,442,440,1,0,0,0,442,443,1,0,0,0,443,445,1,0,0,0,444,442,1,
		0,0,0,445,446,5,34,0,0,446,122,1,0,0,0,447,450,5,39,0,0,448,451,3,137,
		68,0,449,451,8,2,0,0,450,448,1,0,0,0,450,449,1,0,0,0,451,452,1,0,0,0,452,
		453,5,39,0,0,453,124,1,0,0,0,454,455,5,116,0,0,455,456,5,114,0,0,456,457,
		5,117,0,0,457,464,5,101,0,0,458,459,5,102,0,0,459,460,5,97,0,0,460,461,
		5,108,0,0,461,462,5,115,0,0,462,464,5,101,0,0,463,454,1,0,0,0,463,458,
		1,0,0,0,464,126,1,0,0,0,465,469,7,3,0,0,466,468,7,4,0,0,467,466,1,0,0,
		0,468,471,1,0,0,0,469,467,1,0,0,0,469,470,1,0,0,0,470,128,1,0,0,0,471,
		469,1,0,0,0,472,473,5,59,0,0,473,130,1,0,0,0,474,476,7,5,0,0,475,474,1,
		0,0,0,476,477,1,0,0,0,477,475,1,0,0,0,477,478,1,0,0,0,478,479,1,0,0,0,
		479,480,6,65,0,0,480,132,1,0,0,0,481,482,5,47,0,0,482,483,5,47,0,0,483,
		487,1,0,0,0,484,486,8,6,0,0,485,484,1,0,0,0,486,489,1,0,0,0,487,485,1,
		0,0,0,487,488,1,0,0,0,488,490,1,0,0,0,489,487,1,0,0,0,490,491,6,66,0,0,
		491,134,1,0,0,0,492,493,5,47,0,0,493,494,5,42,0,0,494,498,1,0,0,0,495,
		497,9,0,0,0,496,495,1,0,0,0,497,500,1,0,0,0,498,499,1,0,0,0,498,496,1,
		0,0,0,499,501,1,0,0,0,500,498,1,0,0,0,501,502,5,42,0,0,502,503,5,47,0,
		0,503,504,1,0,0,0,504,505,6,67,0,0,505,136,1,0,0,0,506,507,5,92,0,0,507,
		508,7,7,0,0,508,138,1,0,0,0,12,0,424,429,435,440,442,450,463,469,477,487,
		498,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace analyzer
